##
## ---------------------------------
## | M A S T O D O N - D O C K E R |
## ---------------------------------
##
## Container based media tools configuration
##
## -- DO NOT EDIT THIS FILE --
##
## Configuration items for this file are taken from the .env file
##
## Have docker-compose.yml and .env in the same directory to launch the stack

version: '3'

######################
# SERVICES TO LAUNCH #
######################

services:
  # ----------------------------------------
  # MASTODON
  # Decentralized Social Network
  # ----------------------------------------
  mastodon:
    image: lscr.io/linuxserver/mastodon:latest
    container_name: mastodon
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    networks:
      - web
      - internal
    ports:
      - '8081:80'
      - '4443:443'
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - LOCAL_DOMAIN=${LOCAL_DOMAIN}
      - REDIS_HOST=redis_mastodon
      - REDIS_PORT=6379
      - DB_HOST=db_mastodon
      - DB_USER=${MASTODON_DB_USER}
      - DB_NAME=${MASTODON_DB_NAME}
      - DB_PASS=${MASTODON_DB_PASS}
      - DB_PORT=5432
      - ES_ENABLED=false
      - SECRET_KEY_BASE=${MASTODON_SECRET_KEY_BASE}
      - OTP_SECRET=${MASTODON_OTP_SECRET}
      - VAPID_PRIVATE_KEY=${MASTODON_VAPID_PRIVATE_KEY}
      - VAPID_PUBLIC_KEY=${MASTONDON_VAPID_PUBLIC_KEY}
      - SMTP_SERVER=${SMTP_SERVER}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_LOGIN=${SMTP_LOGIN}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_FROM_ADDRESS=${SMTP_FROM_ADDRESS}
      - S3_ENABLED=false
      - WEB_DOMAIN=${MASTODON_WEB_DOMAIN}
    volumes:
      - '${BASE_DOCKER_PATH}/mastodon:/config'

  # --------------------------------------------
  # POSTGRES
  # PostgreSQL Relational Database for Mastodon
  # --------------------------------------------
  db_mastodon:
    image: postgres
    container_name: db_mastodon
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    networks:
      - internal
    expose:
      - 5432
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - POSTGRES_USER=${MASTODON_DB_USER}
      - POSTGRES_DB=${MASTODON_DB_NAME}
      - POSTGRES_PASSWORD=${MASTODON_DB_PASS}
    volumes:
      - '${BASE_DOCKER_PATH}/postgres:/config'

  # --------------------------------------------
  # REDIS
  # In-Memory data store for Mastodon
  # --------------------------------------------
  redis_mastodon:
    image: redis
    container_name: redis_mastodon
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    networks:
      - internal
    expose:
      - 6379
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - '${BASE_DOCKER_PATH}/redis:/data'
    command:
      - redis-server
      - --save 60 1
      - --loglevel warning

  # ----------------------------------------
  # CLOUDFLARED
  # Tunneling back to nas
  # ----------------------------------------
  cloudflared_mastodon:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared_mastodon
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-file: '${LOG_FILE_NUM}'
        max-size: '${LOG_FILE_SIZE}'
    networks:
      - web
    command: tunnel --no-autoupdate run --token ${CLOUDFLARED_TOKEN}

########################
# GLOBAL CONFIGURATION #
########################

networks:
  internal:
  web:
